{"version":3,"sources":["js/config.js","js/movies.js"],"names":["config","api_key","api_base_url","image_base_url","BASE_URL","API_KEY","searchedMoviesDiv","document","getElementById","moviesDiv","searchButton","searchedTitles","addEventListener","userQuery","value","searchURL","fetchSearchedMovies","data","fetch","response","json","responseData","results","console","log","style","display","innerHTML","map","movie","renderSingleMovie","join","fetchMovies","page","allMoviesUrl","poster_path","id","title"],"mappings":"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","file":"movies.ff3736cf.js","sourceRoot":"../src","sourcesContent":["\nexport const config = {\n    api_key: 'fd940caa3dfcfc92860ced4170dcd511',\n    api_base_url: 'https://api.themoviedb.org/3/',\n    image_base_url: 'https://image.tmdb.org/t/p/w200'\n}","\nimport {\n    config\n} from \"./config.js\";\n\nconst BASE_URL = config.api_base_url\nconst API_KEY = config.api_key\nconst searchedMoviesDiv = document.getElementById(\"searched-movies\");\nconst moviesDiv = document.getElementById(\"all-movies\");\nlet searchButton = document.getElementById(\"search-button-movies\");\nconst searchedTitles = document.getElementById(\"searched-titles\");\n\nsearchButton.addEventListener(\"click\", function () {\n    let userQuery = document.getElementById(\"title_input\").value;\n\n    let searchURL = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${userQuery}&include_adult=false`\n\n    async function fetchSearchedMovies() {\n        let data = []\n        try {\n            const response = await fetch(searchURL)\n            const responseData = await response.json()\n            data = responseData.results\n            console.log(data);\n        } catch (error) {\n\n        }\n        searchedTitles.style.display = \"block\";\n        searchedMoviesDiv.innerHTML = data.map(movie => renderSingleMovie(movie)).join(\"\")\n    }\n    fetchSearchedMovies();\n})\n\nasync function fetchMovies() {\n    let page = 1;\n    let allMoviesUrl = `${BASE_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${page}`;\n    let data = []\n    try {\n        const response = await fetch(allMoviesUrl)\n        const responseData = await response.json()\n        data = responseData\n        console.log(data);\n    } catch (error) {\n\n    }\n    moviesDiv.innerHTML = data.results.map(movie => renderSingleMovie(movie)).join(\"\")\n}\n\nfunction renderSingleMovie(movie) {\n    if (movie.poster_path != null) {\n        return (\n            `\n            <div id=\"${movie.id}\" class=\"media-div\">\n                <img src=\"${config.image_base_url + movie.poster_path}\" class=\"featured\" alt=${movie.title}>\n                <p class=\"title-centered\">${movie.title}</p>\n            </div>\n            `\n        )\n    }\n}\n\nfetchMovies()\n\n// Why does this work when I use an ID but not when I use the class that is added to the created div elements?\n// let targetDiv = document.querySelector(\".media-div\");\n\n// targetDiv.addEventListener(\"click\", function (e) {\n//     let x = e.target.getAttribute(\"id\");\n//     console.log(x);\n// })\n\n// document.querySelectorAll('.media-div').forEach(item => {\n//     item.addEventListener('click', e => {\n//         let x = e.target.getAttribute(\"id\");\n//         console.log(x);\n//     })\n// })"]}